<scalastyle>
 <name>Scalastyle Configuration</name>

 <!--
  This file is ordered by check level then fully qualified class name
 -->

 <!-- ERRORS -->
 <check level="error" class="org.scalastyle.file.FileLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxFileLength">800</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.file.FileTabChecker" enabled="true" />
 <!-- Prevent accidental imports of the javadsl (IllegalImportsChecker doesn't seem to work) -->
 <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true">
  <parameters>
   <parameter name="regex">javadsl</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex">[A-Z][A-Za-z]*</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
  <parameters>
   <parameter name="maximum">10</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"/>
 <check level="error" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"/>
 <check level="error" class="org.scalastyle.scalariform.IllegalImportsChecker">
  <parameters>
   <parameter name="illegalImports"><![CDATA[sun._,java.awt._,akka.http.javadsl._]]></parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"/>
 <check level="error" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"/>
 <check level="error" class="org.scalastyle.scalariform.NullChecker" enabled="true"/>
 <check level="error" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
  <parameters>
   <parameter name="maxTypes">30</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex">[A-Z][A-Za-z]*</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex">^[a-z][A-Za-z]*$</parameter>
  </parameters>
 </check>
 <check level="error" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"/>
 <check level="error" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"/>
 <check level="error" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"/>
 <check level="error" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"/>
 <check level="error" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"/>
 <check level="error" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"/>


 <!-- WARNINGS -->
 <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLineLength">180</parameter>
   <parameter name="tabSize">2</parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"/>
 <check level="warning" class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true"/>
 <check level="warning" class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true"/>
 <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
  <parameters>
   <parameter name="singleLineAllowed">true</parameter>
   <parameter name="doubleLineAllowed">false</parameter>
  </parameters>
 </check>


 <!--
 <check level="error" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>

 <check level="error" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLength">50</parameter>
  </parameters>
 </check>

 <check level="error" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"></check>
 <check level="error" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true" />
 -->
</scalastyle>
